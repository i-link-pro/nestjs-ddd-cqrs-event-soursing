import { Injectable } from '@nestjs/common';
import { CommandHandler } from '@shared/application/command.interface';
import { UpdateUserCommand } from '../update-user.command';
import { User } from '../../../domain/entities/user-aggregate';
import { UserRepositoryInterface } from '../../../domain/repositories/user.repository.interface';
import { UserDomainService } from '../../../domain/services/user.domain-service';
import { Email } from '../../../domain/value-objects/email';
import { UserName } from '../../../domain/value-objects/user-name';

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ CQRS –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ
 */
@Injectable()
export class UpdateUserHandler implements CommandHandler<UpdateUserCommand, User> {
  constructor(
    private readonly userRepository: UserRepositoryInterface,
    private readonly userDomainService: UserDomainService
  ) {}

  async handle(command: UpdateUserCommand): Promise<User> {
    console.log(`üéØ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É: UpdateUserCommand –¥–ª—è ${command.userId}`);

    // 1. –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã
    command.validate();

    // 2. –ó–∞–≥—Ä—É–∑–∫–∞ –∞–≥—Ä–µ–≥–∞—Ç–∞
    const user = await this.userRepository.findById(command.userId);
    if (!user) {
      throw new Error(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${command.userId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }

    // 3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–º–µ–Ω–∏, –µ—Å–ª–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ
    if (command.firstName || command.lastName) {
      const firstName = command.firstName || user.userName.firstName;
      const lastName = command.lastName || user.userName.lastName;
      const newUserName = UserName.create(firstName, lastName);
      user.changeUserName(newUserName);
    }

    // 4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ email, –µ—Å–ª–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω
    if (command.email) {
      const newEmail = Email.create(command.email);
      await this.userDomainService.validateEmailChange(user, newEmail);
      user.changeEmail(newEmail);
    }

    // 5. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    const updatedUser = await this.userRepository.update(user);

    console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ CQRS: ${updatedUser.id}`);
    
    return updatedUser;
  }
} 